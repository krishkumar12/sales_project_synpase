{
	"name": "nbk_curated_to_gold",
	"properties": {
		"folder": {
			"name": "pl-curated-to-gold"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool111",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "240bc9b5-13ec-4e5a-a09e-f3f2042db153"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/f6293421-863c-4786-92ba-57aa9850c58d/resourceGroups/rg1/providers/Microsoft.Synapse/workspaces/krishna12synapse1/bigDataPools/sparkpool111",
				"name": "sparkpool111",
				"type": "Spark",
				"endpoint": "https://krishna12synapse1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool111",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"from pyspark.sql.types import StructType, StructField, IntegerType, StringType, DateType, DecimalType\r\n",
					"##Read customer data \r\n",
					"customerschema = StructType([\r\n",
					"   StructField(\"custid\", IntegerType(), True),\r\n",
					"   StructField(\"firstname\", StringType(), True),\r\n",
					"   StructField(\"lastname\", StringType(), True),\r\n",
					"   StructField(\"gender\", StringType(), True)])\r\n",
					"\r\n",
					"#customerschema= ['custid','firstname','lastname','gender']\r\n",
					"dfcustomer = spark.read.load('abfss://synapsecontainer1@synapsedlake1.dfs.core.windows.net/data-curated-silver/customer/customer*'\r\n",
					"        ,format='parquet'\r\n",
					"        ,schema=customerschema\r\n",
					"        #,header=True\r\n",
					"        )\r\n",
					"dfcustomer.show()"
				],
				"execution_count": 57
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"##Read product data \r\n",
					"productschema = StructType([\r\n",
					"   StructField(\"productid\", IntegerType(), True),\r\n",
					"   StructField(\"productname\", StringType(), True),\r\n",
					"   StructField(\"productcategory\", StringType(), True)])\r\n",
					"\r\n",
					"dfproduct = spark.read.load('abfss://synapsecontainer1@synapsedlake1.dfs.core.windows.net/data-curated-silver/product/product*'\r\n",
					"        ,format='parquet'\r\n",
					"        ,schema=productschema\r\n",
					"        ,header=True)\r\n",
					"display(dfproduct.limit(5))\r\n",
					"\r\n",
					"dfproduct.show()"
				],
				"execution_count": 58
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"##Read sales data \r\n",
					"salesschema = StructType([\r\n",
					"   StructField(\"salesid\", IntegerType(), True),\r\n",
					"   StructField(\"custid\", IntegerType(), True),\r\n",
					"   StructField(\"productid\", IntegerType(), True),\r\n",
					"      StructField(\"quantity\", IntegerType(), True),\r\n",
					"   StructField(\"saledate\", DateType(), True),\r\n",
					"      StructField(\"revenue\", DecimalType(), True)])\r\n",
					"dfsales = spark.read.load('abfss://synapsecontainer1@synapsedlake1.dfs.core.windows.net/data-curated-silver/sales/sales*'\r\n",
					"        ,format='parquet'\r\n",
					"        ,schema=salesschema\r\n",
					"        )\r\n",
					"display(dfsales.limit(5))"
				],
				"execution_count": 59
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# create fast moving product\r\n",
					"\r\n",
					"dffastmovingproduct = dfsales.join(dfproduct,'productid').groupBy('productid').sum('quantity')\\\r\n",
					"                        .sort('sum(quantity)',ascending=False)\r\n",
					"\r\n",
					"#dffastmovingproduct = dffastmovingproduct.sort('sum(quantity)',ascending=False)\r\n",
					"dffastmovingproduct.show()\r\n",
					"dffastmovingproduct.write.parquet('abfss://synapsecontainer1@synapsedlake1.dfs.core.windows.net/data-processed-gold/fast-moving-product/',mode='overwrite')"
				],
				"execution_count": 60
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# create fast moving product\r\n",
					"\r\n",
					"dfsalesperday = dfsales.groupby('saledate').sum('revenue') \\\r\n",
					"                .sort('sum(revenue)',ascending=False)\r\n",
					"dfsalesperday.show()\r\n",
					"dfsalesperday.write.parquet('abfss://synapsecontainer1@synapsedlake1.dfs.core.windows.net/data-processed-gold/total-sales-per-day/',mode='overwrite')"
				],
				"execution_count": 61
			}
		]
	}
}